# How to Pont Lights

Point lights have an important role to make the scene more dynamic. You can use point lights to
make the scene brighter at the certain position where the lights placed on.

You can create a point light to represent a torch held by your characters or a explosions. 
The former case is long lasting point lights and the later is short and instant point lights.
For the case of instant point lights you would better to use PointLight emitter instead populating
point lights manually. Check out the Particle document.

# How to spawn

To create point lights use the following function

	IPointLight* IRenderer::CreatePointLight(const Vec3& pos, float range, const Vec3& color,
	float intensity, float lifeTime, bool manualDeletion) = 0;
	
* `pos` : origin of the light
* `range` : light range. Light will be fade out completely at this range.
* `color` : light color.
* `intensity` : brightness
* `lifeTime` : life time for the point light. After the life time ends the point light
will be deleted from the memory automatically if `manualDeletion` is false.
* `manualDeletion` : If true, you need to delete this point light with the function 
`IRenderer:DeletePointLight(IPointLight* light)`

# How to delete

To delete point lights use the following function

	void IRenderer::DeletePointLight(IPointLight* light);
	
If your point light spawned with `manualDeletion=false` you don't need to delete it manually.

# How to modify properties

To modify or set properties of point lights use IPointLight interface which returned by the creation function.

	class IPointLight : public SpatialObject
	{
	public:
		virtual void SetPos(const Vec3& pos) = 0;
		virtual void SetRange(float range) = 0;
		virtual void SetColorAndIntensity(const Vec3& color, float intensity) = 0;
		virtual float GetRange() const = 0;
		virtual const Vec3& GetColor() const = 0;
		virtual float GetIntensity() const = 0;

		virtual void SetLifeTime(float lifeTime) = 0;
		virtual float GetLifeTime() const = 0;

		virtual void SetManualDeletion(bool manual) = 0;
		virtual bool GetManualDeletion() const = 0;
		virtual void SetAlpha(float alpha) = 0;
	};
	
The most of the functions have obvious funtionality expressed by its name. In the case
of `SetAlpha()`, it used by Particle Emitters to control fading in/out.
Having seperated alpha value from the intensity property is easier to manipulate.