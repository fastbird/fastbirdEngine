# How to Point Lights(KOR)

포인트 라이트는 장면을 좀 더 다이나믹하게 연출할 수 있도록 도와 줍니다. 포인트 라이트는
라이트가 배치된 곳 중심으로 장면을 밝게 만드는 데 사용됩니다.

캐릭터가 들고 있는 횃불이나, 폭발 효과에 포인트 라이트를 사용할 수 있습니다. 전자는
길게 지속되는 포인트라이트이고 후자는 짧고 즉시적인 포인트 라이트입니다. 후자를 위해서는
수동으로 포인트 라이트를 만드는 것 보다는 파티클 시스템의 `포인트라이트 에미터`를 사용하는 것이
좋습니다. 이를 위해서는 파티클 문서를 참고해주세요.

# 포인트 라이트 만드는 방법

포인트 라이트를 만들기 위해서는 아래의 함수를 사용합니다.

	IPointLight* IRenderer::CreatePointLight(const Vec3& pos, float range, const Vec3& color,
	float intensity, float lifeTime, bool manualDeletion) = 0;
	
* `pos` : 포인트 라이트의 위치입니다.
* `range` : 포인트 라이트의 영향력 범위입니다. 여기서 지정한 거리에 도달하면 밝기가 0이 됩니다.
* `color` : 색상
* `intensity` : 빛의 세기
* `lifeTime` : 지속시간. 지속시간이 0 되면 `manualDeletion`값이 false일 경우 자동으로 메모리에서 제거됩니다.
* `manualDeletion` : manualDeletion이 true이면 아래에 소개된 삭제 함수로 포인트 라이트를 삭제해 주어야 합니다.

# 삭제 방법

생성할 때 `manualDeletion=false`로 지정한 포인트 라이트는 아래의 함수를 이용하여 삭제해 주어야 합니다.

	void IRenderer::DeletePointLight(IPointLight* light);
	

# 포인트라이트 조작

포인트라이트의 속성들을 수정하고 싶을 때는 '생성 함수'가 리턴한 IPointLight*를 사용하면 됩니다.

	class IPointLight : public SpatialObject
	{
	public:
		virtual void SetPos(const Vec3& pos) = 0;
		virtual void SetRange(float range) = 0;
		virtual void SetColorAndIntensity(const Vec3& color, float intensity) = 0;
		virtual float GetRange() const = 0;
		virtual const Vec3& GetColor() const = 0;
		virtual float GetIntensity() const = 0;

		virtual void SetLifeTime(float lifeTime) = 0;
		virtual float GetLifeTime() const = 0;

		virtual void SetManualDeletion(bool manual) = 0;
		virtual bool GetManualDeletion() const = 0;
		virtual void SetAlpha(float alpha) = 0;
	};
	
대부분이 함수들이 이름에서 그 역할을 짐작할 수 있습니다. 마지막에 있는 `SetAlpha()` 함수는
파티클 시스템의 PointLight emitter가 파티클의 fade in/out을 처리하기 위해 사용하는 함수입니다.